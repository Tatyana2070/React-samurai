{"version":3,"file":"static/js/193.6dd0bce0.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,yB,SCKzG,EAJgB,SAACA,GACf,OAAO,gBAAKC,UAAWC,EAAAA,OAAhB,SAA2BF,EAAMG,SACzC,E,UCSD,EAVmB,SAACH,GAClB,IAAII,EAAO,YAAcJ,EAAMK,GAE/B,OACE,gBAAKJ,UAAWC,EAAAA,OAAW,GAAKA,EAAAA,OAAhC,UACE,SAAC,KAAD,CAASI,GAAIF,EAAb,SAAoBJ,EAAMO,QAG/B,E,0DCOD,EAbuB,SAACP,GACtB,OACE,kBAAMQ,SAAUR,EAAMS,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,KAAKR,KAAK,iBAAiBS,YAAY,+GAE3G,0BACE,mBAAQf,UAAWgB,EAAAA,EAAAA,OAAnB,wEAIP,ECiBKC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,CAA0CE,GAEtE,EA3BgB,SAACrB,GACf,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBF,GAAIsB,EAAEtB,IAAZsB,EAAEtB,GAArC,IACrCuB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAc2B,EAAEzB,GAAxC,IAQ3C,OACE,iBAAKJ,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACGsB,KAEH,iBAAKvB,UAAWC,EAAAA,SAAhB,WACE,yBAAM0B,KACN,SAACV,EAAD,CAAqBV,SAXP,SAACuB,GACnB/B,EAAMgC,YAAYD,EAAOE,eAC1B,SAaF,E,0DC3BGC,EAA6B,SAACZ,GAAD,MAAY,CAC3Ca,OAAQb,EAAMc,KAAKD,OADY,ECiBjC,GAAeE,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEtB,IAEwB,SAACgB,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,GAASC,EAAAA,EAAAA,GAAmBP,GAC7B,EAEJ,KDX+B,SAACQ,GAAe,IAExCC,EAFuC,0IAG3C,WACE,OAAKC,KAAK3C,MAAMmC,QAET,SAACM,GAAD,UAAeE,KAAK3C,SAFI,SAAC,KAAD,CAAUM,GAAG,UAG7C,KAP0C,GAEbsC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQJ,EAARI,CAAoCI,EAG1E,GCAD,CAGEG,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zW-9Z\",\"dialogsItems\":\"Dialogs_dialogsItems__TR29H\",\"active\":\"Dialogs_active__KNb3a\"};","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import s from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={s.dialog + '' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import { Field } from 'redux-form'\r\nimport { Textarea } from '../../common/FormsControls/FormControls'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport components from './../../../assets/styles/styles.module.css'\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} validate={[required, maxLengthCreator(50)]}name='newMessageBody' placeholder='Добавьте сообщение' />\r\n      </div>\r\n      <div>\r\n        <button className={components.button}>Отправить</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddMessageForm","import s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n//import { Navigate } from 'react-router-dom'\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n  //let newMessageBody = state.newMessageBody\r\n\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport {connect} from 'react-redux'\r\nimport Dialogs from './Dialogs'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"names":["props","className","s","message","path","id","to","name","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLengthCreator","placeholder","components","AddMessageFormRedux","reduxForm","form","AddMessageForm","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}