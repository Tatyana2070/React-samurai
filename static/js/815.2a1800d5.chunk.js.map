{"version":3,"file":"static/js/815.2a1800d5.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__WVOHm\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__k0XTs\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://kartinkin.net/uploads/posts/2022-03/1646311422_4-kartinkin-net-p-kartinki-loshadok-5.jpg\" alt='ava'/>\r\n      { props.message }\r\n      <div>\r\n        <span>like </span>{ props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormControls'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport components from './../../../assets/styles/styles.module.css'\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n  //let newPostElement = React.createRef()\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className='s.posts'>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' placeholder='Сообщение' validate={[required, maxLengthCreator(10)]} />\r\n      </div>\r\n      <button className={components.button}>Опубликовать</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts","import { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostContainer\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__RZ56a\"};","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus (e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n\r\n","import Preloader from '../../common/preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} \r\n        alt='ava'/>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile ={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import Profile from './Profile'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer'\r\nimport { useParams, useLocation, useNavigate, Navigate } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuth && !this.props.router.params.userId) {\r\n      return <Navigate to={'/login'} />}\r\n      return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      )\r\n    }\r\n  }\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n\r\n"],"names":["props","className","s","src","alt","message","likesCount","MyPosts","React","postsElements","posts","map","p","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLengthCreator","components","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","photos","large","Preloader","MyPostsContainer","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","isAuth","to","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}